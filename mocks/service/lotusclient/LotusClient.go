// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	cid "github.com/ipfs/go-cid"

	mock "github.com/stretchr/testify/mock"
)

// LotusClient is an autogenerated mock type for the LotusClient type
type LotusClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *LotusClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CurrentSealingSectors provides a mock function with given fields:
func (_m *LotusClient) CurrentSealingSectors() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HealthCheck provides a mock function with given fields:
func (_m *LotusClient) HealthCheck() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ImportData provides a mock function with given fields: pcid, file
func (_m *LotusClient) ImportData(pcid cid.Cid, file string) error {
	ret := _m.Called(pcid, file)

	var r0 error
	if rf, ok := ret.Get(0).(func(cid.Cid, string) error); ok {
		r0 = rf(pcid, file)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsRunningBoost provides a mock function with given fields:
func (_m *LotusClient) IsRunningBoost() (bool, error) {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
